// js/wallet.js
console.log("‚úÖ wallet.js –∑–∞–≥—Ä—É–∂–µ–Ω");

// -----------------------------
// 1) –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
// -----------------------------
let provider = null;
let signer = null;
let selectedAccount = null;

// –ê–î–†–ï–°–ê –ö–û–ù–¢–†–ê–ö–¢–û–í
const IBITI_TOKEN_ADDRESS      = "0xa83825e09d3bf6ABf64efc70F08AdDF81A7Ba196";
const NFTSALEMANAGER_ADDRESS   = "0x5572F3AE84319Fbd6e285a0CB854f92Afd31dd6D";
const NFT_DISCOUNT_ADDRESS     = "0x26C4E3D3E40943D2d569e832A243e329E14ecb02";
const PHASED_TOKENSALE_ADDRESS = "0x3092cFDfF6890F33b3227c3d2740F84772A465c7";

// ABI
import { ibitiTokenAbi }      from "./abis/ibitiTokenAbi.js";
import { nftSaleManagerAbi }  from "./abis/nftSaleManagerAbi.js";
import { nftDiscountAbi }     from "./abis/nftDiscountAbi.js";
import { PhasedTokenSaleAbi } from "./abis/PhasedTokenSaleAbi.js";
import { ethers }             from "https://cdn.jsdelivr.net/npm/ethers@6.10.0/+esm";

// -----------------------------
// 2) Web3Modal V1 –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
// -----------------------------
// –í HTML –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –¥–æ wallet.js:
// <script src="https://unpkg.com/web3modal@1.9.8/dist/index.js"></script>
// <script src="https://unpkg.com/@walletconnect/web3-provider@1.6.6/dist/umd/index.min.js"></script>
const WalletConnectProviderConstructor =
  window.WalletConnectProvider?.default || window.WalletConnectProvider;

const providerOptions = {
  walletconnect: {
    package: WalletConnectProviderConstructor,
    options: {
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–¥–∞—ë–º HTTP-–±—Ä–∏–¥–∂, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å wss://p.bridge‚Ä¶ –∏ –ø–æ–¥–æ–±–Ω—ã—Ö
      bridge: "https://bridge.walletconnect.org",
      // RPC –¥–ª—è Binance Smart Chain (chainId = 56)
      rpc: {
        56: "https://bsc-dataseed.binance.org/"
      },
      chainId: 56,
      // –û—Ç–∫–ª—é—á–∞–µ–º injected –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã, —á—Ç–æ–±—ã –Ω–µ –º–µ—Ç–∞–ª—Å—è –ø–æ —Ä–∞–∑–Ω—ã–º –º–æ—Å—Ç–∞–º
      disableInjectedProvider: true
    }
  }
};

const web3Modal = new (window.Web3Modal?.default || window.Web3Modal)({
  cacheProvider: false,
  providerOptions
});

// -----------------------------
// 3) –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ —á–µ—Ä–µ–∑ Web3Modal V1 + WalletConnect V1
// -----------------------------
async function connectWallet() {
  try {
    console.log("üîå –û—Ç–∫—Ä—ã–≤–∞–µ–º Web3Modal...");
    await web3Modal.clearCachedProvider(); // –°–±—Ä–æ—Å –∫—ç—à–∞, —á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–ª–æ—Å—å –æ–∫–Ω–æ
    const rawProvider = await web3Modal.connect(); // –ó–∞–ø—É—Å–∫–∞–µ–º –≤—ã–±–æ—Ä –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞

    // –°–æ–∑–¥–∞—ë–º Ethers.js –ø—Ä–æ–≤–∞–π–¥–µ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ rawProvider
    const web3Provider = new ethers.BrowserProvider(rawProvider);
    signer = await web3Provider.getSigner();
    provider = web3Provider;

    // –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
    selectedAccount = await signer.getAddress();
    window.selectedAccount = selectedAccount;

    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∞–¥—Ä–µ—Å –≤ —ç–ª–µ–º–µ–Ω—Ç–µ —Å id="walletAddress"
    const walletDisplay = document.getElementById("walletAddress");
    if (walletDisplay) walletDisplay.innerText = selectedAccount;

    // –°–ª—É—à–∞–µ–º —Å–º–µ–Ω—É –∞–∫–∫–∞—É–Ω—Ç–∞
    rawProvider.on("accountsChanged", async (accs) => {
      if (accs.length === 0) {
        disconnectWallet();
        return;
      }
      selectedAccount = accs[0];
      if (walletDisplay) walletDisplay.innerText = selectedAccount;
      await showIbitiBalance(true);
    });

    // –°–ª—É—à–∞–µ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ
    rawProvider.on("disconnect", () => {
      disconnectWallet();
    });

    console.log("‚úÖ –ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω:", selectedAccount);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –±–∞–ª–∞–Ω—Å
    await initContracts();
    await showIbitiBalance(true);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:", err);
    alert("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞");
  }
}

// -----------------------------
// 4) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
// -----------------------------
async function initContracts() {
  window.ibitiToken  = new ethers.Contract(IBITI_TOKEN_ADDRESS,      ibitiTokenAbi,      signer);
  window.saleManager = new ethers.Contract(NFTSALEMANAGER_ADDRESS,   nftSaleManagerAbi,  signer);
  window.nftDiscount = new ethers.Contract(NFT_DISCOUNT_ADDRESS,     nftDiscountAbi,     signer);
  window.phasedSale  = new ethers.Contract(PHASED_TOKENSALE_ADDRESS, PhasedTokenSaleAbi, signer);

  console.log("‚úÖ –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã");
}

// -----------------------------
// 5) –ü–æ–∫–∞–∑ –±–∞–ª–∞–Ω—Å–∞ IBITI
// -----------------------------
async function showIbitiBalance(highlight = false) {
  if (!window.ibitiToken || !selectedAccount) return;
  try {
    const balance = await window.ibitiToken.balanceOf(selectedAccount);
    const formatted = ethers.formatUnits(balance, 8);
    const el = document.getElementById("ibitiBalance");
    if (el) {
      el.innerText = `–í–∞—à –±–∞–ª–∞–Ω—Å IBITI: ${formatted}`;
      if (highlight) {
        el.style.transition = "background 0.3s ease";
        el.style.background = "rgba(255, 215, 0, 0.2)";
        setTimeout(() => (el.style.background = "transparent"), 500);
      }
    }
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞:", err);
  }
}

// -----------------------------
// 6) –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
// -----------------------------
async function disconnectWallet() {
  try {
    // –ï—Å–ª–∏ rawProvider –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç disconnect()
    const cachedProvider = web3Modal.cachedProvider;
    if (cachedProvider) {
      await web3Modal.clearCachedProvider();
    }
  } catch {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
  }
  provider = null;
  signer = null;
  selectedAccount = null;

  const walletDisplay = document.getElementById("walletAddress");
  if (walletDisplay) walletDisplay.innerText = "Disconnected";

  const el = document.getElementById("ibitiBalance");
  if (el) el.innerText = "";

  console.log("üîå –ö–æ—à–µ–ª–µ–∫ –æ—Ç–∫–ª—é—á–µ–Ω");
}

// -----------------------------
// 7) –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
// -----------------------------
document.addEventListener("DOMContentLoaded", () => {
  const connectBtn = document.getElementById("connectWalletBtn");
  if (connectBtn) {
    connectBtn.addEventListener("click", (e) => {
      e.preventDefault();
      connectWallet();
    });
  } else {
    console.warn("–ö–Ω–æ–ø–∫–∞ —Å id='connectWalletBtn' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ DOM.");
  }
});

// -----------------------------
// 8) –≠–∫—Å–ø–æ—Ä—Ç –∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
// -----------------------------
export {
  connectWallet,
  disconnectWallet,
  provider,
  signer,
  showIbitiBalance,
  selectedAccount
};

// –î—É–±–ª–∏—Ä—É–µ–º –≤ window –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
window.connectWallet    = connectWallet;
window.disconnectWallet = disconnectWallet;
window.showIbitiBalance = showIbitiBalance;
window.selectedAccount  = selectedAccount;
