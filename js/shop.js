// js/shop.js
import { ethers } from "https://cdn.jsdelivr.net/npm/ethers@6.10.0/+esm";
import config       from "./config.js";
import { buyIBITI } from "./sale.js";
import { showIbitiBalance } from "./wallet.js";

// –ü–æ–∫—É–ø–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
async function handlePurchase(amount, productName) {
  if (!window.ethereum) {
    Swal.fire({
      icon: 'warning',
      title: 'MetaMask –Ω–µ –Ω–∞–π–¥–µ–Ω',
      text: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MetaMask –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏.'
    });
    return;
  }

  Swal.fire({
    title: '–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...',
    html: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –∫–æ—à–µ–ª—å–∫–µ',
    allowOutsideClick: false,
    didOpen: () => Swal.showLoading()
  });

  try {
    const decimals        = 8;
    // parseUnits –≤ ethers@6:
    const amountFormatted = ethers.parseUnits(amount.toString(), decimals);
    const paymentMethod   = document.getElementById("paymentToken")?.value;
    let tx;

    if (productName === "IBITIcoin") {
      if (paymentMethod === "USDT") {
        // –±–µ—Ä—ë–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –∏–ª–∏ –≤–∑–∞–∏–º–æ–∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –Ω—É–ª–µ–≤–æ–π –∞–¥—Ä–µ—Å
        const referrer = localStorage.getItem("referrer") || ethers.ZeroAddress;
        tx = await buyIBITI(amountFormatted, referrer);
      } else {
        throw new Error("–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ BNB –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞.");
      }
    } else {
      throw new Error("–ü–æ–∫—É–ø–∫–∞ –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.");
    }

    await tx.wait();

    // üîÅ –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    await showIbitiBalance(true);

    Swal.fire({
      icon: 'success',
      title: '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!',
      text: '–£—Ä–∞! –í—ã —Å—Ç–∞–ª–∏ –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º!',
      timer: 5000,
      showConfirmButton: false
    });
  } catch (error) {
    Swal.fire({
      icon: 'error',
      title: '–û—à–∏–±–∫–∞',
      text: error.message || '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.',
      confirmButtonText: '–û–∫'
    });
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞ window, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ –º–æ–≥–ª–∏ –≤—ã–∑–≤–∞—Ç—å
window.handlePurchase = handlePurchase;

// ----------------------
// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
// ----------------------

let currentProduct = null;

function openPurchaseModal(productName) {
  currentProduct = productName;

  if (productName === 'NFT') {
    window.location.href = 'nft.html';
    return;
  }

  document.getElementById('purchaseTitle').innerText = '–ü–æ–∫—É–ø–∫–∞ ' + productName;
  document.getElementById('purchaseModal').style.display = 'block';
}

function closePurchaseModal() {
  document.getElementById('purchaseModal').style.display = 'none';
  document.getElementById('nftAmount').value = '';
}

window.openPurchaseModal  = openPurchaseModal;
window.closePurchaseModal = closePurchaseModal;

// ----------------------
// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
// ----------------------

document.addEventListener("DOMContentLoaded", () => {
  const form = document.getElementById('purchaseForm');
  if (form) {
    form.addEventListener('submit', async function(event) {
      event.preventDefault();
      const amount = document.getElementById('nftAmount').value;

      const walletDisplay = document.getElementById("walletAddress");
      if (!walletDisplay ||
          walletDisplay.innerText.trim() === '' ||
          walletDisplay.innerText.toLowerCase().includes("disconnect")
      ) {
        Swal.fire({
          icon: 'warning',
          title: '–ö–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω',
          text: '–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫.',
        });
        return;
      }

      closePurchaseModal();
      await handlePurchase(amount, currentProduct);
    });
  } else {
    console.error("–§–æ—Ä–º–∞ –ø–æ–∫—É–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
  }

  // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
  const paymentToken = document.getElementById('paymentToken');
  const confirmBtn   = document.getElementById('confirmBtn');
  if (paymentToken && confirmBtn) {
    paymentToken.addEventListener('change', function () {
      confirmBtn.disabled = (this.value === "");
    });
  } else {
    console.error("–≠–ª–µ–º–µ–Ω—Ç—ã paymentToken –∏–ª–∏ confirmBtn –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
  }
});

console.log("‚úÖ shop.js –∑–∞–≥—Ä—É–∂–µ–Ω");
