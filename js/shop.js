// js/shop.js
// –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–∫—É–ø–∫–∞–º–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ

import config       from "./config.js";
import { buyIBITI } from "./sale.js";
import { connectWallet, selectedAccount, showIbitiBalance } from "./wallet.js";
import Swal from "https://cdn.jsdelivr.net/npm/sweetalert2@11/+esm";

console.log("‚úÖ shop.js –∑–∞–≥—Ä—É–∂–µ–Ω");

let currentProduct = null;

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,
 * –µ—Å–ª–∏ —Å–∞–π—Ç –æ—Ç–∫—Ä—ã—Ç –Ω–µ –≤–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ –∫–æ—à–µ–ª—å–∫–∞.
 */
export function showDappBrowserNotice() {
  Swal.fire({
    icon: 'info',
    title: '–û—Ç–∫—Ä–æ–π—Ç–µ –≤ –∫–æ—à–µ–ª—å–∫–µ',
    html: `
      –î–ª—è –ø–æ–∫—É–ø–æ–∫ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä –∫–æ—à–µ–ª—å–∫–∞:<br>
      <strong>MetaMask</strong>, <strong>Trust Wallet</strong> –∏–ª–∏ <strong>Coinbase Wallet</strong>.
    `,
    confirmButtonText: '–ü–æ–Ω—è—Ç–Ω–æ',
    allowOutsideClick: false
  });
}

/**
 * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª–∫—É –ø–æ–∫—É–ø–∫–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞.
 * –ï—Å–ª–∏ –∫–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á—ë–Ω ‚Äî —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç.
 */
window.openPurchaseModal = async function(productName) {
  currentProduct = productName;

  if (!selectedAccount) {
    try {
      await connectWallet();
    } catch (err) {
      console.warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫–æ—à–µ–ª—å–∫–∞:", err);
      return;
    }
  }

  if (productName === "NFT") {
    window.location.href = "nft.html";
    return;
  }

  document.getElementById("purchaseTitle").innerText = "–ü–æ–∫—É–ø–∫–∞ " + productName;
  document.getElementById("purchaseModal").style.display = "block";
};

/** –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –ø–æ–∫—É–ø–∫–∏ */
window.closePurchaseModal = function() {
  document.getElementById("purchaseModal").style.display = "none";
  document.getElementById("nftAmount").value = "";
};

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ–∫—É–ø–∫–∏.
 */
async function handlePurchase(amount, productName) {
  if (!window.ethereum) {
    Swal.fire({
      icon: 'warning',
      title: 'MetaMask –Ω–µ –Ω–∞–π–¥–µ–Ω',
      text: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MetaMask –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏.'
    });
    return;
  }

  Swal.fire({
    title: '–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...',
    html: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –∫–æ—à–µ–ª—å–∫–µ',
    allowOutsideClick: false,
    didOpen: () => Swal.showLoading()
  });

  try {
    const decimals        = 8;
    const amountFormatted = ethers.parseUnits(amount.toString(), decimals);
    const paymentMethod   = document.getElementById("paymentToken")?.value;
    let tx;

    if (productName === "IBITIcoin") {
      if (paymentMethod === "USDT") {
        const referrer = localStorage.getItem("referrer") || ethers.ZeroAddress;
        tx = await buyIBITI(amountFormatted, referrer);
      } else {
        throw new Error("–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ BNB –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞.");
      }
    } else {
      throw new Error("–ü–æ–∫—É–ø–∫–∞ –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.");
    }

    await tx.wait();
    await showIbitiBalance(true);

    Swal.fire({
      icon: 'success',
      title: '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!',
      text: '–í—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ IBITI!',
      timer: 3000,
      showConfirmButton: false
    });

  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ:", error);
    let rawReason = error?.revert?.args?.[0] || error?.shortMessage || error?.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞";
    let reason = rawReason === "not started"
      ? "üìÖ –ü—Ä–æ–¥–∞–∂–∞ –Ω–∞—á–Ω—ë—Ç—Å—è: 1 –∏—é–ª—è –≤ 09:00 UTC"
      : rawReason;

    Swal.fire({
      icon: 'error',
      title: '–û—à–∏–±–∫–∞',
      text: reason,
      confirmButtonText: '–û–∫'
    });
  }
}

window.handlePurchase = handlePurchase;

// –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM ‚Äî –Ω–∞–≤–µ—à–∏–≤–∞–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
document.addEventListener("DOMContentLoaded", () => {
  // –§–æ—Ä–º–∞ –ø–æ–∫—É–ø–∫–∏
  const form = document.getElementById('purchaseForm');
  if (form) {
    form.addEventListener('submit', async event => {
      event.preventDefault();
      const amount = document.getElementById('nftAmount').value;

      if (!selectedAccount) {
        Swal.fire({
          icon: 'warning',
          title: '–ö–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω',
          text: '–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫.'
        });
        return;
      }

      closePurchaseModal();
      await handlePurchase(amount, currentProduct);
    });
  }

  // –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã
  const paymentToken = document.getElementById('paymentToken');
  const confirmBtn   = document.getElementById('confirmBtn');
  if (paymentToken && confirmBtn) {
    paymentToken.addEventListener('change', () => {
      confirmBtn.disabled = (paymentToken.value === "");
    });
  }

  // –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç –¥–æ —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–æ–¥–∞–∂
  const countdownEl = document.getElementById("countdownNotice");
  const saleStart = new Date("2025-07-01T09:00:00Z");
  function updateCountdown() {
    const now = new Date();
    const diff = saleStart - now;

    if (diff <= 0) {
      countdownEl.innerText = "üü¢ –ü—Ä–æ–¥–∞–∂–∞ –∞–∫—Ç–∏–≤–Ω–∞!";
      clearInterval(timer);
      return;
    }

    const days    = Math.floor(diff / (1000 * 60 * 60 * 24));
    const hours   = Math.floor((diff / (1000 * 60 * 60)) % 24);
    const minutes = Math.floor((diff / (1000 * 60)) % 60);
    const seconds = Math.floor((diff / 1000) % 60);

    countdownEl.innerText = `‚è≥ –ü—Ä–æ–¥–∞–∂–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑: ${days}–¥ ${hours}—á ${minutes}–º ${seconds}—Å`;
  }
  if (countdownEl) {
    updateCountdown();
    const timer = setInterval(updateCountdown, 1000);
  }

  // –ö–Ω–æ–ø–∫–∞ ¬´–ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫¬ª
  const connectBtn = document.getElementById("openWalletModal");
  if (connectBtn) {
    connectBtn.addEventListener("click", e => {
      const isMobile    = /Android|iPhone|iPad|iPod/i.test(navigator.userAgent);
      const hasInjected = Boolean(window.ethereum);
      if (isMobile && !hasInjected) {
        e.preventDefault();
        showDappBrowserNotice();
      }
      // –∏–Ω–∞—á–µ –¥–∞–ª—å—à–µ –≤–∞—à –∫–æ–¥ –æ—Ç–∫—Ä–æ–µ—Ç –º–æ–¥–∞–ª–∫—É –≤—ã–±–æ—Ä–∞ –∫–æ—à–µ–ª—å–∫–æ–≤
    });
  }
});
