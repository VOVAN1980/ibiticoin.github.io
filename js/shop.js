// shop.js

// –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–∞–¥—Ä–µ—Å–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ—Ç–∏ –∏ —Ç.–¥.)
import config from "./config.js";
// –ò–º–ø–æ—Ä—Ç ABI –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –º–æ–Ω–µ—Ç—ã ‚Äì —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª IBITIcoin.json –ª–µ–∂–∏—Ç –≤ –ø–∞–ø–∫–µ js/abis/
import contractAbi from "./abis/IBITIcoin.js";

// –°–æ–∑–¥–∞—ë–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä –∏ signer —á–µ—Ä–µ–∑ ethers.js
const provider = new ethers.providers.Web3Provider(window.ethereum);
const signer = provider.getSigner();

// –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∞–¥—Ä–µ—Å –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const contract = new ethers.Contract(
  config.contracts.IBITI_TOKEN_ADDRESS, // –∞–¥—Ä–µ—Å –º–æ–Ω–µ—Ç—ã –∏–∑ config.js
  contractAbi,
  signer
);

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏
async function handlePurchase() {
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ SweetAlert
  Swal.fire({
    title: '–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...',
    html: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ...',
    allowOutsideClick: false,
    didOpen: () => {
      Swal.showLoading();
    }
  });
  
  try {
    // –ó–¥–µ—Å—å –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –ø–æ–∫—É–ø–∫–∏ –Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ.
    // –ó–∞–º–µ–Ω–∏—Ç–µ "purchase" –∏ –µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞ —Ç–æ—Ç –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø–æ–∫—É–ø–∫—É —Ç–æ–∫–µ–Ω–æ–≤ –≤ –≤–∞—à–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ.
    const tx = await contract.purchase(/* –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∫—É–ø–∫–∏ */);
    await tx.wait();
    
    Swal.fire({
      icon: 'success',
      title: '–£—Ä–∞!',
      text: '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞, —Ç—ã —Å—Ç–∞–ª –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º! üéâ',
      timer: 5000,
      timerProgressBar: true,
      showConfirmButton: false
    });
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –∏–ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç
  } catch (error) {
    Swal.fire({
      icon: 'error',
      title: '–û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏',
      text: error.message || '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.',
      confirmButtonText: '–û–∫'
    });
  }
}

// –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ —ç–ª–µ–º–µ–Ω—Ç—É —Å id="buyBtn", –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
const buyBtn = document.getElementById('buyBtn');
if (buyBtn) {
  buyBtn.addEventListener('click', (e) => {
    e.preventDefault();
    handlePurchase();
  });
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é handlePurchase –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ,
// —á—Ç–æ–±—ã –µ—ë –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—ã–∑—ã–≤–∞—Ç—å –∏–∑ HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.handlePurchase = handlePurchase;

console.log("–ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è —Å–µ—Ç—å:", config.networkName);
console.log("RPC URL:", config.rpcUrl);
console.log("–ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞:", config.contracts.IBITI_TOKEN_ADDRESS);
