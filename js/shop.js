// js/shop.js
import { ethers } from "https://cdn.jsdelivr.net/npm/ethers@6.13.5/+esm";
import config from "./config.js";
import { buyIBITI, getSaleContract } from "./sale.js";
import {
  connectWallet,
  selectedAccount,
  showIbitiBalance,
  signer           // ‚Üê –Ω—É–∂–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å USDT
} from "./wallet.js";
import Swal from "https://cdn.jsdelivr.net/npm/sweetalert2@11/+esm";
import { PhasedTokenSaleAbi } from "./abis/PhasedTokenSaleAbi.js";
import { ibitiTokenAbi } from "./abis/ibitiTokenAbi.js";

/* ---------- 1. –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã —Ç–æ–ª—å–∫–æ-–¥–ª—è-—á—Ç–µ–Ω–∏—è ---------- */
const rpcProvider     = new ethers.JsonRpcProvider(config.active.rpcUrl);
const readSaleContract = new ethers.Contract(
  config.active.contracts.PHASED_TOKENSALE,
  PhasedTokenSaleAbi,
  rpcProvider
);
const ibitiTokenRead = new ethers.Contract(
  config.active.contracts.IBITI_TOKEN,
  ibitiTokenAbi,
  rpcProvider
);

/* ---------- 2. –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂–∏ ---------- */
async function loadSaleStats() {
  const capEl        = document.getElementById("cap");
  const refReserveEl = document.getElementById("refReserve");
  const salePoolEl   = document.getElementById("salePool");
  const soldEl       = document.getElementById("sold");
  const leftEl       = document.getElementById("left");
  const bonusPoolEl  = document.getElementById("bonusPool");
  const progressEl   = document.getElementById("salesProgress");
  const percentEl    = document.getElementById("soldPercent");
  const lastUpdEl    = document.getElementById("lastUpdated");

  const saleContract = getSaleContract() || readSaleContract;
  if (!saleContract) return;

  try {
    const saleAddr = config.active.contracts.PHASED_TOKENSALE;
    // 1) –û–±—â–∏–π –±–∞–ª–∞–Ω—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ (—Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –æ—à–∏–±–æ–∫)
    let depositBN;
    try {
      depositBN = await ibitiTokenRead.balanceOf(saleAddr);
    } catch (e) {
      console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å IBITI —É –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –ø—Ä–æ–¥–∞–∂:", e);
      depositBN = 0n;
    }
    const cap = Number(ethers.formatUnits(depositBN, 8));

    // 2) –°–∫–æ–ª—å–∫–æ —É–∂–µ –ø—Ä–æ–¥–∞–Ω–æ –ø–æ –≤—Å–µ–º —Ñ–∞–∑–∞–º
    const PHASE_COUNT = 3;
    let soldBN = 0n;
    for (let i = 0; i < PHASE_COUNT; i++) {
      const p = await saleContract.phases(i);
      soldBN += BigInt(p.sold.toString());
    }
    const sold = Number(ethers.formatUnits(soldBN, 8));

    // 3) –†–µ–∑–µ—Ä–≤ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    const refBN = await saleContract.rewardTokens();
    const refReserve = Number(ethers.formatUnits(refBN, 8));

    // 4) –ü—É–ª –±–æ–Ω—É—Å–æ–≤
    let bonusReserve;
    try {
      const bonusBN = await saleContract.rewardReserve();
      bonusReserve = Number(ethers.formatUnits(bonusBN, 8));
    } catch {
      bonusReserve = 500_000;
    }

    // 5) –û—Å–Ω–æ–≤–Ω–æ–π –ø—É–ª –∏ –æ—Å—Ç–∞—Ç–æ–∫
    const salePool = cap - refReserve - bonusReserve;
    const left = salePool - sold;

    // 6) –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ–¥–∞–Ω–æ
    const percent = salePool > 0 ? (sold / salePool) * 100 : 0;
    const pctClamped = Math.min(Math.max(percent, 0), 100);

    // 7) –§–æ—Ä–º–∞—Ç
    const fmt = x => x.toLocaleString("ru-RU", { minimumFractionDigits: 2, maximumFractionDigits: 2 });

    // 8) –í—Å—Ç–∞–≤–ª—è–µ–º –≤ DOM
    capEl.innerText        = fmt(cap);
    refReserveEl.innerText = fmt(refReserve);
    salePoolEl.innerText   = fmt(salePool);
    soldEl.innerText       = fmt(sold);
    leftEl.innerText       = fmt(left);
    bonusPoolEl.innerText  = fmt(bonusReserve);

    // 9) –ü—Ä–æ–≥—Ä–µ—Å—Å –∏ –≤—Ä–µ–º—è
    progressEl.style.width   = ${pctClamped}%;
    percentEl.innerText      = ${pctClamped.toFixed(2)}%;
    lastUpdEl.innerText      = –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${new Date().toLocaleTimeString("ru-RU")};
  } catch (e) {
    console.warn("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–æ–∫–µ–Ω—Å–µ–π–ª–∞:", e);
  }
}

/* ---------- 3. –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ---------- */
async function loadReferralStats(account) {
  const rewardEl   = document.getElementById("refReward");
  const refCountEl = document.getElementById("refCount");
  const block      = document.getElementById("referralStats");
  if (!rewardEl || !refCountEl || !block) return;

  const sale = getSaleContract();
  if (!sale) return;

  try {
    const rawRef = await sale.referralRewards(account);
    refCountEl.textContent = Math.floor(Number(ethers.formatUnits(rawRef, 8)));

    const filter  = readSaleContract.filters.Bought(account);
    const events  = await readSaleContract.queryFilter(filter);
    const bonusBN = events.reduce((a, ev) => a + BigInt(ev.args.bonusIBITI), 0n);
    rewardEl.textContent = Number(ethers.formatUnits(bonusBN, 8)).toFixed(2);

    block.style.display = "block";
  } catch (e) {
    console.warn("–û—à–∏–±–∫–∞ loadReferralStats:", e);
  }
}

/* –ø—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ —Ç–µ–∫—É—â–∏–π –∞–∫–∫ –≤–∏–¥–µ—Ç—å –ø–∞–Ω–µ–ª—å-—Ä–µ—Ñ–µ—Ä–∞–ª–∫—É */
async function loadReferralData() {
  if (!selectedAccount) return;
  const flag = localStorage.getItem(`referralUnlocked_${selectedAccount}`);
  if (flag) await loadReferralStats(selectedAccount);
}

/* ---------- 4. UI-—É—Ç–∏–ª–∏—Ç—ã ---------- */
export function showDappBrowserNotice() {
  Swal.fire({
    icon: "info",
    title: "–û—Ç–∫—Ä–æ–π—Ç–µ –≤ –∫–æ—à–µ–ª—å–∫–µ",
    html: `–î–ª—è –ø–æ–∫—É–ø–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä –∫–æ—à–µ–ª—å–∫–∞:<br>
          <strong>MetaMask</strong>, <strong>Trust Wallet</strong> –∏–ª–∏
          <strong>Coinbase Wallet</strong>.`,
    confirmButtonText: "–ü–æ–Ω—è—Ç–Ω–æ",
    allowOutsideClick: false
  });
}

/* ---------- 5. –ú–æ–¥–∞–ª–∫–∞ –ø–æ–∫—É–ø–∫–∏ ---------- */
let currentProduct = null;

window.openPurchaseModal = async product => {
  currentProduct = product;

  if (!selectedAccount) {
    try { await connectWallet(); }
    catch (err) { return console.warn("connectWallet:", err); }
  }

  if (product === "NFT") {
    window.location.href = "nft.html";
    return;
  }

  document.getElementById("purchaseTitle").textContent = "–ü–æ–∫—É–ø–∫–∞ " + product;
  document.getElementById("purchaseModal").style.display = "block";
};

window.closePurchaseModal = () => {
  document.getElementById("purchaseModal").style.display = "none";
  document.getElementById("nftAmount").value = "";
};

/* ---------- 6. –ü–æ–∫—É–ø–∫–∞ ---------- */
async function handlePurchase(amount, product) {
  if (!window.ethereum) {
    return Swal.fire({ icon: "warning", title: "MetaMask –Ω–µ –Ω–∞–π–¥–µ–Ω", text: "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MetaMask." });
  }

  Swal.fire({ title: "–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è‚Ä¶", didOpen: () => Swal.showLoading(), allowOutsideClick: false });

  try {
    /* 6.1 –ø—Ä–æ–≤–µ—Ä–∫–∞/—Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã */
    const amountUnits  = ethers.parseUnits(amount.toString(), 8);
    const paymentToken = document.getElementById("paymentToken")?.value;

    if (product !== "IBITIcoin" || paymentToken !== "USDT") {
      throw new Error("–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ BNB –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞.");
    }

    /* 6.2 –±–∞–ª–∞–Ω—Å USDT */
    const usdt = new ethers.Contract(config.active.contracts.USDT_TOKEN, ibitiTokenAbi, signer);
    const bal  = await usdt.balanceOf(selectedAccount);
    if (bal < amountUnits) throw new Error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ USDT.");

    /* 6.3 —Å–æ–≤–µ—Ä—à–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é */
    const ref   = localStorage.getItem("referrer") || ethers.ZeroAddress;
    const tx    = await buyIBITI(amountUnits, ref);
    await tx.wait();

    await showIbitiBalance(true);

    /* 6.4 –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ ‚â•10 IBITI ‚Äî –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É */
    if (Number(amount) >= 10) {
      localStorage.setItem(`referralUnlocked_${selectedAccount}`, "1");
      await loadReferralStats(selectedAccount);

      const link = `${location.origin}${location.pathname}?ref=${selectedAccount}`;
      await Swal.fire({
        icon: "info",
        title: "–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞",
        html: `<a href="${link}" target="_blank">${link}</a><br>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å.`,
        confirmButtonText: "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å",
        preConfirm: () => navigator.clipboard.writeText(link)
      });

      window.enableReferralAfterPurchase?.(selectedAccount);
    }

    Swal.fire({ icon: "success", title: "–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!", timer: 3000, showConfirmButton: false });
  } catch (err) {
    const raw = err?.message?.replace(/^Error:\s*/, "") || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞";
    const reason = raw === "not started" ? "üìÖ –ü—Ä–æ–¥–∞–∂–∞ –Ω–∞—á–Ω—ë—Ç—Å—è: 1 –∏—é–ª—è –≤ 09:00 UTC" : raw;

    Swal.fire({ icon: "error", title: "–û—à–∏–±–∫–∞", text: reason, confirmButtonText: "–û–∫" });
    console.warn("handlePurchase:", err);
  }
}

window.handlePurchase = handlePurchase;

/* ---------- 7. DOMContentLoaded ---------- */
document.addEventListener("DOMContentLoaded", () => {
  /* 7.1 —Å–æ—Ö—Ä–∞–Ω—è–µ–º ?ref=‚Ä¶ */
  const ref = new URLSearchParams(location.search).get("ref");
  if (ref && ethers.isAddress(ref)) localStorage.setItem("referrer", ref);

  /* 7.2 –ø–µ—Ä–≤–∏—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ */
  loadSaleStats();
  loadReferralData();

  setInterval(loadSaleStats, 30_000);
  document.getElementById("refreshStats")?.addEventListener("click", loadSaleStats);

  /* 7.3 —Ñ–æ—Ä–º–∞ –ø–æ–∫—É–ø–∫–∏ */
  document.getElementById("purchaseForm")?.addEventListener("submit", async ev => {
    ev.preventDefault();
    if (!selectedAccount) {
      return Swal.fire({ icon: "warning", title: "–ö–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω", text: "–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫." });
    }
    const amount = document.getElementById("nftAmount").value;
    window.closePurchaseModal();
    await handlePurchase(amount, currentProduct);
    loadSaleStats();
  });

  /* 7.4 –≤–∫–ª—é—á–∞–µ–º / –≤—ã–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É ¬´–ö—É–ø–∏—Ç—å¬ª –≤ –º–æ–¥–∞–ª–∫–µ */
  const paymentSel = document.getElementById("paymentToken");
  const confirmBtn = document.getElementById("confirmBtn");
  paymentSel?.addEventListener("change", () => {
    if (confirmBtn) confirmBtn.disabled = !paymentSel.value;
  });

  /* 7.5 —Ç–∞–π–º–µ—Ä –¥–æ —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–æ–¥–∞–∂ */
  const countdownEl = document.getElementById("countdownNotice");
  if (countdownEl) {
    const saleStart = new Date("2025-07-01T09:00:00Z").getTime();
    const int = setInterval(() => {
      const diff = saleStart - Date.now();
      if (diff <= 0) {
        countdownEl.textContent = "üü¢ –ü—Ä–æ–¥–∞–∂–∞ –∞–∫—Ç–∏–≤–Ω–∞!";
        return clearInterval(int);
      }
      const d = Math.floor(diff / 864e5);
      const h = Math.floor((diff / 36e5) % 24);
      const m = Math.floor((diff / 6e4) % 60);
      const s = Math.floor((diff / 1e3) % 60);
      countdownEl.textContent = `‚è≥ –ü—Ä–æ–¥–∞–∂–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑: ${d}–¥ ${h}—á ${m}–º ${s}—Å`;
    }, 1000);
  }

  /* 7.6 –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ —á–µ—Ä–µ–∑ –º–æ–¥–∞–ª–∫—É */
  const walletModal = document.getElementById("walletModal");
  const openBtn     = document.getElementById("openWalletModal");
  const closeBtn    = document.getElementById("closeWalletModal");
  const btnInj      = document.getElementById("btnInjected");
  const btnCb       = document.getElementById("btnCoinbase");

  openBtn?.addEventListener("click", e => {
    const isMobile = /Android|iPhone|iPad|iPod/i.test(navigator.userAgent);
    if (isMobile && !window.ethereum) {
      e.preventDefault();
      return showDappBrowserNotice();
    }
    walletModal.style.display = "flex";
  });
  closeBtn?.addEventListener("click", () => (walletModal.style.display = "none"));
  walletModal?.addEventListener("click", e => {
    if (e.target === walletModal) walletModal.style.display = "none";
  });

  btnInj?.addEventListener("click", async () => {
    walletModal.style.display = "none";
    await window.connectWallet?.();
    loadReferralData();
  });
  btnCb?.addEventListener("click", async () => {
    walletModal.style.display = "none";
    await window.connectViaCoinbase?.();
    loadReferralData();
  });

  /* 7.7 –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Ä–µ—Ñ-—Å—Å—ã–ª–∫–∏ */
  const storedOwner = localStorage.getItem("referralOwner");
  if (storedOwner && selectedAccount && selectedAccount !== storedOwner) {
    localStorage.removeItem("referralOwner");
  }
});

console.log("‚úÖ shop.js –∑–∞–≥—Ä—É–∂–µ–Ω");
